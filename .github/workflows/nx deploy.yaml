# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: CI

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_BRANCH: ${{ github.event.number || github.ref }}
  NX_RUN_GROUP: ${{ github.run_id }}
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}
  GKE_CREDENTIALS: ${{ secrets.GKE_CREDENTIALS }} # Add your cluster zone here.
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: badman # Add your cluster name here.
  GKE_ZONE: europe-west1 # Add your cluster zone here

jobs:
  agents:
    name: Agent ${{ matrix.agent }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        agent: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install --frozen-lockfile
      - name: Start Nx Agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent

  main:
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      - name: Checkout [main]
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - name: Get latest Tag
        id: get-latest-tag
        run: |
          TAG_VERSION=$(git describe --match 'v*' --abbrev=0 --tags $(git rev-list --tags --max-count=1))
          echo "Found tag: $TAG_VERSION"
          LAST_TAG_HASH=$(git rev-list -n 1 $TAG_VERSION)
          echo "Found hash: $LAST_TAG_HASH"
          echo "LAST_TAG_HASH=$LAST_TAG_HASH" >> $GITHUB_ENV        
      - name: Standard Version
        run: |
          git config --global user.email "info@badman.app"
          git config --global user.name "Badman Releaser"
          yarn run standard-version
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install --frozen-lockfile
      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=lint  --parallel --max-parallel=3
      - run: npx nx affected --target=test  --parallel --max-parallel=2 --code-coverage
      - run: npx nx-cloud stop-all-agents

  pr:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Checkout [pr]
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install --frozen-lockfile
      - run: npx nx-cloud start-ci-run
      - run: npx nx affected --target=build --parallel --max-parallel=3
      - run: npx nx affected --target=lint  --parallel --max-parallel=3
      - run: npx nx affected --target=test  --parallel --max-parallel=2 --code-coverage
      - run: npx nx-cloud stop-all-agents

  docker-build:
    if: ${{ github.event_name != 'pull_request' }}
    needs: main
    runs-on: ubuntu-latest
    env:
      NX_CLOUD_DISTRIBUTED_EXECUTION: false
      INPUT_PUSH: true
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      - uses: c-hive/gha-yarn-cache@v2
      - run: yarn install --frozen-lockfile
      - run: npx nx affected --target=docker
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}