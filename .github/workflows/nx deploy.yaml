name: Deploy nx

on: workflow_dispatch

env:
  GKE_CREDENTIALS: ${{ secrets.GKE_CREDENTIALS }} # Add your cluster zone here.
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: badman # Add your cluster name here.
  GKE_ZONE: europe-west1 # Add your cluster zone here.

jobs:
  build:
    name: Docker build
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./code
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get latest Tag
        id: get-latest-tag
        run: |
          TAG_VERSION=$(git describe --match 'v*' --abbrev=0 --tags $(git rev-list --tags --max-count=1))
          echo "Found tag: $TAG_VERSION"
          LAST_TAG_HASH=$(git rev-list -n 1 $TAG_VERSION)
          echo "Found hash: $LAST_TAG_HASH"
          echo "LAST_TAG_HASH=$LAST_TAG_HASH" >> $GITHUB_ENV

      - name: 'Install Dependencies'
        run: yarn install --frozen-lockfile

      - name: Standard Version
        run: |
          git config --global user.email "info@badman.app"
          git config --global user.name "Badman Releaser"
          yarn run standard-version

      - id: 'auth'
        uses: 'google-github-actions/auth@v0.8.0'
        with:
          credentials_json: '${{ env.GKE_CREDENTIALS }}'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v0.7.0'
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Build app'
        run: |
          npx nx affected --target=build --base=${{ env.LAST_TAG_HASH }} --head=origin/main --parallel=3
          npx nx affected --target=docker --base=${{ env.LAST_TAG_HASH }} --head=origin/main --parallel=3
        env:
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Deploy'
        run: |
          npx nx affected --target=deploy --base=${{ env.LAST_TAG_HASH }} --head=origin/main --parallel=3
