name: publish
on: workflow_dispatch
jobs:
  build:
    name: Bootstrap, Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ['backend', 'frontend']
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: 'https://npm.pkg.github.com'
      - name: restore lerna
        uses: actions/cache@v3
        with:
          path: |
            code/${{ matrix.folder }}/node_modules
            code/${{ matrix.folder }}/*/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('code/${{ matrix.folder }}/yarn.lock') }}
      - run: npx lerna bootstrap --ignore="@badvlascript/basic" --ci
        working-directory: code/${{ matrix.folder }}
      - run: npm run lint
        working-directory: code/${{ matrix.folder }}
      - run: npm run test
        working-directory: code/${{ matrix.folder }}
      - uses: codecov/codecov-action@v1
        with:
          name: codecov-${{ matrix.folder }}
          directory: code/${{ matrix.folder }}

  publish-github:
    outputs:
      new_sha: ${{ steps.sha.outputs.new_sha }}
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: 14
          registry-url: 'https://npm.pkg.github.com'
      - name: Bump version and create changelog
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      - name: Npm release Frontend
        run: npm run release -- ${{ steps.tag_version.outputs.new_version  }} --no-git-tag-version --yes --force-publish
        working-directory: code/frontend
      - name: Npm release Backend
        run: npm run release -- ${{ steps.tag_version.outputs.new_version }} --no-git-tag-version --yes --force-publish
        working-directory: code/backend
      - name: Generate changelog
        run: npx conventional-changelog-cli -p angular -i code/frontend/packages/client/src/assets/CHANGELOG.md -t v -k code/frontend/packages/client/ -s
      - name: Commit new files and tag
        run: |
          git config --global user.email "glenn.latomme@gmail.com"
          git config --global user.name "Glenn Latomme"
          git add .
          git commit -m "chore(release): ${{ steps.tag_version.outputs.new_version }}"
          git tag ${{ steps.tag_version.outputs.new_tag }}
      - name: Push new files
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog  }}
      - name: Set output vars
        id: sha
        run: |
          sha_new=$(git rev-parse HEAD)
          echo "::set-output name=new_sha::$sha_new"
  docker-backend:
    needs: publish-github
    strategy:
      matrix:
        pacakge: ['server', 'search', 'jobs']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.publish-github.outputs.new_sha }}
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/badminton-apps/core/${{ matrix.pacakge }}
          tags: |
            type=semver,pattern={{version}},value=${{needs.publish-github.outputs.new_tag}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Packages registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          push: true
          context: code/backend/.
          file: code/backend/packages/${{ matrix.pacakge }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Update
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm dep update code/backend/packages/${{ matrix.pacakge }}/charts/${{ matrix.pacakge }}/
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Package
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm package --app-version ${{ needs.publish-github.outputs.new_version }} code/backend/packages/${{ matrix.pacakge }}/charts/${{ matrix.pacakge }}/ -d code/backend/packages/${{ matrix.pacakge }}
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Upgrade
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: >
            helm upgrade 
            --install 
            --namespace badvla 
            --set image.repostory=ghcr.io/badminton-apps/core/${{ matrix.pacakge }} 
            ${{ matrix.pacakge }}
            code/backend/packages/${{ matrix.pacakge }}/${{ matrix.pacakge }}-0.3.15.tgz

          kubeconfig: '${{ secrets.KUBECONFIG }}'
  docker-frontend:
    needs: publish-github
    strategy:
      matrix:
        pacakge: ['client']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.publish-github.outputs.new_sha }}
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/badminton-apps/core/${{ matrix.pacakge }}
          tags: |
            type=semver,pattern={{version}},value=${{needs.publish-github.outputs.new_tag}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Packages registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          push: true
          context: code/frontend/.
          file: code/frontend/packages/${{ matrix.pacakge }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Package
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm package --app-version ${{ needs.publish-github.outputs.new_version }} code/frontend/packages/${{ matrix.pacakge }}/charts/${{ matrix.pacakge }}/ -d code/backend/packages/${{ matrix.pacakge }}
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm upgrade --install --namespace badvla --set image.repostory=ghcr.io/badminton-apps/core/${{ matrix.pacakge }} ${{ matrix.pacakge }} code/backend/packages/${{ matrix.pacakge }}/${{ matrix.pacakge }}-0.3.15.tgz
          kubeconfig: '${{ secrets.KUBECONFIG }}'
