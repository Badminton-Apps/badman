name: publish
on: workflow_dispatch
jobs:
  build:
    name: Bootstrap, Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: ['backend', 'frontend']
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
      - run: npx lerna bootstrap
        working-directory: code/${{ matrix.folder }}
      - run: npx lerna run lint
        working-directory: code/${{ matrix.folder }}
      - run: npx lerna run test
        working-directory: code/${{ matrix.folder }}

      # TOOD:
      #   - Docker build
      #   - Docker push
      #   - Helm package
      #   - Upgrade helm
  publish-github:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          tag-prefix: 'v'
          version-file: './code/backend/lerna.json'
          skip-version-file: true
          skip-commit: true
          preset: 'angular'
          skip-on-empty: false
      # - run: npm run gen-erd
      #   name: Generate erd schema
      #   working-directory: code/backend/packages/_shared
      - run: npm run release -- ${{ steps.changelog.outputs.version }} --no-git-tag-version --yes --force-publish
        name: release Frontend
        working-directory: code/frontend
      - run: npm run release -- ${{ steps.changelog.outputs.version }} --no-git-tag-version --yes --force-publish
        name: release Backend
        working-directory: code/backend
      - run: cp CHANGELOG.md code/frontend/packages/client/src/assets/CHANGELOG.md
      - name: Add markdown files
        run: |
          git config --global user.email "glenn.latomme@gmail.com"
          git config --global user.name "Glenn Latomme"
          git add .
          git commit -m "chore(release): ${{ steps.changelog.outputs.version }}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
  docker-backend:
    needs: publish-github
    strategy:
      matrix:
        pacakge: ['server', 'import', 'simulate']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/badminton-apps/core/${{ matrix.pacakge }}
          tags: |
            type=semver,pattern={{version}},value=${{steps.previoustag.outputs.tag}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Packages registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          push: true
          context: code/backend/.
          file: code/backend/packages/${{ matrix.pacakge }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Update
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm dep update code/backend/packages/${{ matrix.pacakge }}/charts/${{ matrix.pacakge }}/
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Package
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm package --app-version ${{steps.previoustag.outputs.tag}} code/backend/packages/${{ matrix.pacakge }}/charts/${{ matrix.pacakge }}/
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Upgrade
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm upgrade --namespace badvla --install --wait --set image.repostory=ghcr.io/badminton-apps/core/${{ matrix.pacakge }} --set postgresql.existingSecret=server-postgresql ${{ matrix.pacakge }} ${{ matrix.pacakge }}-${{steps.previoustag.outputs.tag}}.tgz
          kubeconfig: '${{ secrets.KUBECONFIG }}'
  docker-frontend:
    needs: publish-github
    strategy:
      matrix:
        pacakge: ['client']
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Get Previous tag'
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          images: |
            ghcr.io/badminton-apps/core/${{ matrix.pacakge }}
          tags: |
            type=semver,pattern={{version}},value=${{steps.previoustag.outputs.tag}}
            type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github Packages registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          push: true
          context: code/frontend/.
          file: code/frontend/packages/${{ matrix.pacakge }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Package
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm package --app-version ${{steps.previoustag.outputs.tag}} code/frontend/packages/${{ matrix.pacakge }}/charts/${{ matrix.pacakge }}/
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm upgrade --namespace badvla --install --wait --set image.repostory=ghcr.io/badminton-apps/core/${{ matrix.pacakge }} ${{ matrix.pacakge }} ${{ matrix.pacakge }}-${{steps.previoustag.outputs.tag}}.tgz
          kubeconfig: '${{ secrets.KUBECONFIG }}'
