name: Main Branch Workflow

on:
  push:
    branches:
      - main
    tags:
      - '!**'

env:
  NODE_ENV: '20.1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: Nx Cloud - Main Job
    uses: ./.github/workflows/nx-cloud-main.yml
    secrets:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    with:
      main-branch-name: main
      number-of-agents: 3
      output-affected-projects: true
      parallel-commands: |
        npx nx-cloud record -- npx nx workspace-lint
      parallel-commands-on-agents: |
        npx nx affected --target=build --parallel=3
        npx nx affected --target=lint --parallel=3
        npx nx affected --target=test --parallel=3 --ci --code-coverage
        npx nx affected --target=server

  agents:
    name: Nx Cloud - Agents
    uses: ./.github/workflows/nx-cloud-agents.yml
    secrets:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    with:
      number-of-agents: 3

  Release:
    runs-on: ubuntu-latest
    needs: [main]

    steps:
      - name: Checkout [develop]
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_ENV }}

      - name: install dependencies for release
        run: npm --prefix \scripts instal

      - name: Create release
        run: |
          git config --global user.email "info@badman.app"
          git config --global user.name "Badman Releaser"
          git config advice.ignoredHook false
          npm run --prefix \scripts create-release -- --affected=${{ needs.main.outputs.affectedProjects }}

      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ env.version }}
          release_name: ${{ env.version }}
          body: ${{ env.changelog  }}

      - name: Trigger deploy hooks on Render.com (if affected)
        run: |
          # read the affected projects from the main job
          affected=${{ needs.main.outputs.affectedProjects }}

          # check if the affected projects contains api
          if [[ $affected == *"api"* ]]; then
            curl -X POST -H "Content-Type: application/json" ${{ secrets.PROD_API_HOOK }}
          fi

          # check if the affected projects contains worker-sync
          if [[ $affected == *"worker-sync"* ]]; then
            curl -X POST -H "Content-Type: application/json" ${{ secrets.PROD_WORKER_SYNC_HOOK }}
          fi

      - name: Trigger deploy hook on Vercel.com (if affected)
        run: |
          # read the affected projects from the main job
          affected=${{ needs.main.outputs.affectedProjects }}

          # check if the affected projects contains api
          if [[ $affected == *"badman"* ]]; then
            curl -X POST -H "Content-Type: application/json" ${{ secrets.PROD_CLIENT_HOOK }}
          fi
          
