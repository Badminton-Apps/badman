name: Develop Branch Workflow

on:
  push:
    branches:
      - develop
    tags:
      - '!**'

env:
  NODE_ENV: '20.1'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  main:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.13.0
    secrets:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    with:
      number-of-agents: 3
      parallel-commands: |
        npx nx-cloud record -- npx nx workspace-lint
      parallel-commands-on-agents: |
        npx nx affected --target=build --parallel=3
        npx nx affected --target=lint --parallel=3
        npx nx affected --target=test --parallel=3 --ci --code-coverage
        npx nx affected --target=server
      final-commands: |
        echo "All parallel jobs are done!"

        # store affected projects in env variable
        AFFECTED_PROJECTS=$(npx nx print-affected -t build --select=projects --type=app)

        echo "Affected projects: $AFFECTED_PROJECTS"

        # store affected projects in env variable
        echo affected_projects=$AFFECTED_PROJECTS >> $GITHUB_ENV

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.11
    secrets:
      NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    with:
      number-of-agents: 3

  Release:
    runs-on: ubuntu-latest
    needs: [main]

    steps:
      - name: Checkout [develop]
        uses: actions/checkout@v3
        with:
          ref: develop
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_ENV }}

      - name: install dependencies for release
        run: npm --prefix \scripts instal

      - name: Create release
        run: |
          TAG_VERSION=$(git describe --match 'v*' --abbrev=0 --tags $(git rev-list --tags --max-count=1))
          LAST_TAG_HASH=$(git rev-list -n 1 $TAG_VERSION)
          git config --global user.email "info@badman.app"
          git config --global user.name "Badman Releaser"
          git config advice.ignoredHook false
          npm run --prefix \scripts create-release -- --beta --base=$TAG_VERSION --head=origin/develop

          # Set env variable for next step
          echo version=$TAG_VERSION >> $GITHUB_ENV

      - name: Trigger deploy hooks on Render.com (if affected)
        run: |
          if [ -n "$(git diff --name-only ${{env.version}} origin/develop -- apps/api)" ]; then
            curl -X POST -H "Content-Type: application/json" ${{ secrets.BETA_API_HOOK }}
          fi
          if [ -n "$(git diff --name-only ${{env.version}} origin/develop -- apps/worker-sync)" ]; then
            curl -X POST -H "Content-Type: application/json" ${{ secrets.BETA_WORKER_SYNC_HOOK }}
          fi

      - name: Trigger deploy hook on Vercel.com (if affected)
        run: |
          if [ -n "$(git diff --name-only ${{env.version}} origin/develop -- apps/badman)" ]; then
            curl -X POST -H "Content-Type: application/json" ${{ secrets.BETA_CLIENT_HOOK }}
          fi
