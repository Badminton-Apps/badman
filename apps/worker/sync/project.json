{
  "name": "worker-sync",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/worker/sync/src",
  "projectType": "application",
  "targets": {
    "build": {
      "executor": "@nx/webpack:webpack",
      "outputs": ["{options.outputPath}"],
      "defaultConfiguration": "development",
      "options": {
        "target": "node",
        "compiler": "tsc",
        "outputPath": "dist/apps/worker/sync",
        "main": "apps/worker/sync/src/main.ts",
        "tsConfig": "apps/worker/sync/tsconfig.app.json",
        "assets": [
          "apps/worker/sync/src/assets",
          {
            "glob": "**/*",
            "input": "libs/backend/mailing/src/compile",
            "output": "compile/libs/mailing"
          },
          {
            "glob": "**/*",
            "input": "libs/backend/translate/assets",
            "output": "assets"
          }
        ],
        "webpackConfig": "apps/worker/sync//webpack.config.js"
      },
      "configurations": {
        "development": {},
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false
        }
      }
    },
    "serve": {
      "executor": "@nx/node:node",
      "defaultConfiguration": "development",
      "options": {
        "buildTarget": "worker-sync:build",
        "port": 9230,
        "inspect": "inspect",
        "host": "0.0.0.0"
      },
      "configurations": {
        "development": {
          "buildTarget": "worker-sync:build:development"
        },
        "production": {
          "buildTarget": "worker-sync:build:production"
        }
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": ["apps/worker/sync/**/*.ts"]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/apps/worker/sync"],
      "options": {
        "jestConfig": "apps/worker/sync/jest.config.js",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    }
  },
  "tags": []
}
