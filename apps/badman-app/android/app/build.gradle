import com.android.build.gradle.internal.tasks.FinalizeBundleTask

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def flutterMinimumAndroidSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (flutterMinimumAndroidSdkVersion == null) {
    flutterMinimumAndroidSdkVersion = '16'
}

def flutterCompileSdkVersion = localProperties.getProperty('flutter.compileSdkVersion')
if (flutterCompileSdkVersion == null) {
    flutterCompileSdkVersion = '28'
}


android {
    namespace "app.badman"
    compileSdkVersion flutterCompileSdkVersion.toInteger()
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "app.badman"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutterMinimumAndroidSdkVersion.toInteger()
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        archivesBaseName = "${applicationId}.${versionName}"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }

    // applicationVariants.all { variant ->
    //     def artifactName = "${variant.applicationId}.${variant.versionName}"
        
    //     variant.outputs.all {
    //         outputFileName = "${artifactName}.apk"
    //     }

    //     tasks.named("sign${variant.name.capitalize()}Bundle", FinalizeBundleTask) {
    //         File file = finalBundleFile.asFile.get()
    //         File finalFile = new File(file.parentFile, "${artifactName}.aab")
    //         finalBundleFile.set(finalFile)
    //     }
    // }

    
}

flutter {
    source '../..'
}

dependencies {}
