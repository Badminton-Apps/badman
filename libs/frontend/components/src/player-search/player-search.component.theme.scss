// info: https://material.angular.io/guide/theming-your-components

@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $warn-palette: map.get($theme, 'warn');
  $background: map.get($color-config, 'background');

  $foreground: map.get($color-config, 'foreground');
  $isDark: map.get($color-config, 'is-dark');
  $caption-color: null;

  @if ($isDark) {
    $caption-color: darken(
      mat.get-color-from-palette($foreground, 'base'),
      40%
    );
  } @else {
    $caption-color: lighten(
      mat.get-color-from-palette($foreground, 'base'),
      60%
    );
  }

  // badman-player-search {
  // }

  .badman-search-player-panel {
    small.member-id {
      color: $caption-color;
    }

    .invalid-player {
      color: mat.get-color-from-palette($warn-palette, 300);
    }
  }
}

@mixin typography($theme) {
  $typography-config: mat.get-typography-config($theme);

  // badman-player-search {
  //   .mat-mdc-form-field-bottom-align {
  //     display: none;
  //   }
  // }

  .badman-search-player-panel {
    small.member-id {
      @include mat.typography-level($typography-config, 'caption');
    }
    .invalid-player {
      @include mat.typography-level($typography-config, 'caption');
    }
  }
}

@mixin theme($theme) {
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
