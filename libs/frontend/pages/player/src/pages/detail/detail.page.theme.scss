// info: https://material.angular.io/guide/theming-your-components

@use 'sass:map';
@use '@angular/material' as mat;

@use './components/show-level.component.theme.scss' as show-level;

@mixin color($theme) {
  @include show-level.color($theme);

  badman-player-detail {
    $color-config: mat.get-color-config($theme);
    $foreground: map.get($color-config, 'foreground');
    $isDark: map.get($color-config, 'is-dark');

    .click-for-breakdown {
      @if ($isDark) {
        color: darken(mat.get-color-from-palette($foreground, 'base'), 40%);
      } @else {
        color: lighten(mat.get-color-from-palette($foreground, 'base'), 60%);
      }
    }
  }
}

@mixin typography($theme) {
  @include show-level.typography($theme);

  badman-player-detail {
    $typography-config: mat.get-typography-config($theme);
    .sub-text {
      @include mat.typography-level($typography-config, 'caption');
    }

    .click-for-breakdown {
      @include mat.typography-level($typography-config, 'caption');
    }

    .mdc-evolution-chip__action--presentational {
      cursor: pointer;
    }
  }
}

@mixin theme($theme) {
  // Only apply theme on the correct element
  $color-config: mat.get-color-config($theme);
  @if $color-config != null {
    @include color($theme);
  }

  $typography-config: mat.get-typography-config($theme);
  @if $typography-config != null {
    @include typography($theme);
  }
}
