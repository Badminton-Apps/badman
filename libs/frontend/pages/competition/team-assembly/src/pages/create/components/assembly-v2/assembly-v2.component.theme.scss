// info: https://material.angular.io/guide/theming-your-components

@use "sass:color";
@use "sass:map";
@use "@angular/material" as mat;

@mixin color($theme) {
  $isDark: map.get($theme, "is-dark");
  $danger-palette: map.get($theme, danger);
  $warn-palette: map.get($theme, warn);
  $success-palette: map.get($theme, success);

  badman-assembly-v2 {
    $border-color: mat.get-theme-color($theme, foreground, "disabled-text");

    .information {
      .team,
      .base,
      .errors {
        border-color: $border-color;

        .ranking {
          @if ($isDark) {
            color: color.scale(mat.get-theme-color($theme, foreground, "base"), $lightness: -40%);
          } @else {
            color: color.scale(mat.get-theme-color($theme, foreground, "base"), $lightness: 60%);
          }
        }
      }
    }

    .drag {
      border-color: $border-color;
    }

    label {
      background-color: mat.get-theme-color($theme, "background", "background");
      color: mat.get-theme-color($theme, foreground, "secondary-text");
    }

    // Global colors for the validation (because I'm lazy to find out why the dialog is not working)
    .validation-overview {
      .error-list {
        color: mat.m2-get-color-from-palette($danger-palette, 300);
      }
      .warning-list {
        color: mat.m2-get-color-from-palette($warn-palette, 300);
      }
      .no-errors {
        color: mat.m2-get-color-from-palette($success-palette, 300);
      }
    }
  }
}

@mixin typography($theme) {
  badman-assembly-v2 {
    label {
      font: mat.get-theme-typography($theme, caption, font);
    }

    .information {
      .index {
        font: mat.get-theme-typography($theme, caption, font);
      }

      .ranking {
        font: mat.get-theme-typography($theme, caption, font);
      }
    }

    .team-info .add-player .permanent {
      font: mat.get-theme-typography($theme, caption, font);
    }
  }
}
