mixin singlePlayer(player, type, game)
  .flex.h-full.items-center.border-black.border-solid.border.border-r-0.justify-center(
    class={ 'border-b': game == 4, 'border-b-0': game != 4, 'border-t-2': game == 1 }
  ) #{ gameLabels[game + 3] }
  if player == null || player == undefined
    +emptyPlayer(false)(class!=attributes.class, class={ 'border-t-2': game == 1, 'border-t-0': game })
  else
    +player(false, player, type)(class!=attributes.class, class={ 'border-t-2': game == 1, 'border-t-0': game != 1  })

mixin doublePlayer(double, type, game)
  .flex.h-full.items-center.border-black.row-span-2.border-solid.border.border-r-0.border-b-0.justify-center(
    class={ 'border-t-0': game == 1 }
  ) #{ gameLabels[game-1] }
  if double == null || double == undefined
    +emptyPlayer(true)(class!=attributes.class)
    +emptyPlayer(false)(class!=attributes.class, class={ 'border-b-0': game == 4 })
  else
    if double.player1 == null  || double.player1 == undefined
      +emptyPlayer(true)(class!=attributes.class)
    else
      +player(true, double.player1, type)(class!=attributes.class)

    if double.player2 == null  || double.player2 == undefined
      +emptyPlayer(false)(class!=attributes.class, class={ 'border-b-0': game == 4 })
    else
      +player(false, double.player2, type)(
        class!=attributes.class,
        class={ 'border-b-0': game == 4 }
      )

mixin subPlayer(player)
  if player == null || player == undefined
    +emptyPlayer(false)(class!=attributes.class)
  else
    +player(false, player, 'sub')(class!=attributes.class)


mixin emptyPlayer(dashed)
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 

mixin player(dashed, player, type)
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) #{ player.fullName }
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed, 'flex place-content-around': type =='sub' })
    if type == 'sub'
      div #{player.rankingLastPlace.single}
      div #{player.rankingLastPlace.double}
      div #{player.rankingLastPlace.mix}
    else if type == 'single'
      | #{ player.rankingLastPlace.single }
    else if type == 'double'
      | #{ player.rankingLastPlace.double }
    else if type == 'mix'
      | #{ player.rankingLastPlace.mix }
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) #{ player.memberId }
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) #{ player.sum }
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) #{ player.highest }
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed }) 
    |
    if player.team
      i.fas.fa-check
  div(class!=attributes.class, class={ 'border-bottom-dashed': dashed })
    if player.base
      i.fas.fa-check
