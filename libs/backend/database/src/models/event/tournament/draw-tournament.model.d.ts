import { Model } from 'sequelize-typescript';
import { BuildOptions, BelongsToGetAssociationMixin, BelongsToSetAssociationMixin, HasManyAddAssociationMixin, HasManyAddAssociationsMixin, HasManyCountAssociationsMixin, HasManyGetAssociationsMixin, HasManyHasAssociationMixin, HasManyHasAssociationsMixin, HasManyRemoveAssociationMixin, HasManyRemoveAssociationsMixin, HasManySetAssociationsMixin } from 'sequelize';
import { SubEventTournament } from './sub-event-tournament.model';
import { DrawType } from '@badman/utils';
import { Game } from '../game.model';
import { Standing } from '../standing.model';
import { EventEntry } from '../entry.model';
import { Relation } from '../../../wrapper';
export declare class DrawTournament extends Model {
    constructor(values?: Partial<DrawTournament>, options?: BuildOptions);
    id: string;
    name?: string;
    type?: DrawType;
    size?: number;
    games?: Relation<Game[]>;
    eventEntries?: Relation<EventEntry[]>;
    visualCode?: string;
    risers: number;
    fallers: number;
    subEventTournament?: Relation<SubEventTournament>;
    subeventId?: string;
    getGames: HasManyGetAssociationsMixin<Game>;
    setGames: HasManySetAssociationsMixin<Game, string>;
    addGames: HasManyAddAssociationsMixin<Game, string>;
    addGame: HasManyAddAssociationMixin<Game, string>;
    removeGame: HasManyRemoveAssociationMixin<Game, string>;
    removeGames: HasManyRemoveAssociationsMixin<Game, string>;
    hasGame: HasManyHasAssociationMixin<Game, string>;
    hasGames: HasManyHasAssociationsMixin<Game, string>;
    countGames: HasManyCountAssociationsMixin;
    getStandings: HasManyGetAssociationsMixin<Standing>;
    setStandings: HasManySetAssociationsMixin<Standing, string>;
    addStandings: HasManyAddAssociationsMixin<Standing, string>;
    addStanding: HasManyAddAssociationMixin<Standing, string>;
    removeStanding: HasManyRemoveAssociationMixin<Standing, string>;
    removeStandings: HasManyRemoveAssociationsMixin<Standing, string>;
    hasStanding: HasManyHasAssociationMixin<Standing, string>;
    hasStandings: HasManyHasAssociationsMixin<Standing, string>;
    countStandings: HasManyCountAssociationsMixin;
    getSubEventTournament: BelongsToGetAssociationMixin<SubEventTournament>;
    setSubEventTournament: BelongsToSetAssociationMixin<SubEventTournament, string>;
    getEventEntries: HasManyGetAssociationsMixin<EventEntry>;
    setEventEntries: HasManySetAssociationsMixin<EventEntry, string>;
    addEventEntries: HasManyAddAssociationsMixin<EventEntry, string>;
    addEventEntry: HasManyAddAssociationMixin<EventEntry, string>;
    removeEventEntry: HasManyRemoveAssociationMixin<EventEntry, string>;
    removeEventEntries: HasManyRemoveAssociationsMixin<EventEntry, string>;
    hasEventEntry: HasManyHasAssociationMixin<EventEntry, string>;
    hasEventEntries: HasManyHasAssociationsMixin<EventEntry, string>;
    countEventEntries: HasManyCountAssociationsMixin;
}
