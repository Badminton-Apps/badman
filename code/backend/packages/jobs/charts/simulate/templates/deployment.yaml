apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
{{ if .Values.image.useImagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Chart.Name }}-acr-secret
{{ end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.internalPort }}
            protocol: TCP
            name: http  
        readinessProbe:
          httpGet:
            path: /ready
            port: 9000
          failureThreshold: 1
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /live
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 30
          # Allow sufficient amount of time (90 seconds = periodSeconds * failureThreshold)
          # for the registered shutdown handlers to run to completion.
          periodSeconds: 30
          successThreshold: 1
          # Setting a very low timeout value (e.g. 1 second) can cause false-positive
          # checks and service interruption.
          timeoutSeconds: 5

        # As per Kubernetes documentation (https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#when-should-you-use-a-startup-probe),
        # startup probe should point to the same endpoint as the liveness probe.
        #
        # Startup probe is only needed when container is taking longer to start than
        # `initialDelaySeconds + failureThreshold Ã— periodSeconds` of the liveness probe.
        startupProbe:
          httpGet:
            path: /live
            port: 9000
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
{{ toYaml .Values.resources | indent 12 }}
        env:
          - name: production
            value: "true"
          - name: SERVICE_NAME
            value: {{ .Values.services.name }}       
          - name: APM_SERVER_URL
            value: {{ .Values.apm.server }}   
          - name: ESC_SERVER_URL
            value: {{ .Values.esc.server }}    
          - name: PORT
            value: {{ .Values.service.internalPort | quote}}
          - name: DB_IP
            value: {{ .Values.database.DB_IP }}
          - name: DB_DATABASE
            value: {{ .Values.database.DB_DATABASE }}
          - name: DB_USER
            value: {{ .Values.database.DB_USER }}
          - name: DB_DIALECT
            value: {{ .Values.database.DB_DIALECT }}
          - name: AUTH0_ISSUER
            value: {{ .Values.auth0.issuer }}
          - name: LOG_LEVEL
            value: info
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: server-postgresql
                key: postgresql-password
          - name: APM_SERVER_TOKEN
            valueFrom:
              secretKeyRef:
                name: apm
                key: token